/**
 * ===== MIDDLEWARE –î–õ–Ø –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö =====
 * –°–æ–¥–µ—Ä–∂–∏—Ç middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
 * –í–∫–ª—é—á–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞, —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */

// –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
const colors = require('colors');

/**
 * ===== –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ó–ê–ü–†–û–°–û–í =====
 * Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
 * –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –º–µ—Ç–æ–¥, URL, IP, User-Agent –∏ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (–±–µ–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
 */
const requestLogger = (req, res, next) => {
  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
  const timestamp = new Date().toISOString();
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
  const method = req.method;                                    // HTTP –º–µ—Ç–æ–¥ (GET, POST, etc.)
  const url = req.originalUrl;                                  // URL –∑–∞–ø—Ä–æ—Å–∞
  const userAgent = req.get('User-Agent') || 'Unknown';        // –ë—Ä–∞—É–∑–µ—Ä/–∫–ª–∏–µ–Ω—Ç
  const ip = req.ip || req.connection.remoteAddress;           // IP –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
  
  // –í—ã–≤–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
  console.log(`üìù [${timestamp}] ${method} ${url} - IP: ${ip}`);
  
  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è POST/PUT (–±–µ–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
  if ((method === 'POST' || method === 'PUT') && req.body) {
    // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    const safeBody = { ...req.body };
    
    // –£–¥–∞–ª—è–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–≥–æ–≤ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    delete safeBody.password;   // –ü–∞—Ä–æ–ª–∏
    delete safeBody.token;      // –¢–æ–∫–µ–Ω—ã
    delete safeBody.apiKey;     // API –∫–ª—é—á–∏
    
    // –í—ã–≤–æ–¥–∏–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if (Object.keys(safeBody).length > 0) {
      console.log(`üìã Request body:`, JSON.stringify(safeBody, null, 2));
    }
  }
  
  // –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  req.startTime = Date.now();
  
  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
  const originalSend = res.send;
  
  // –ó–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–∞—à—É —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  res.send = function(data) {
    // –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    const duration = Date.now() - req.startTime;
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
    const statusCode = res.statusCode;
    
    // –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    const statusEmoji = statusCode >= 400 ? '‚ùå' : statusCode >= 300 ? '‚ö†Ô∏è' : '‚úÖ';
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    console.log(`${statusEmoji} [${timestamp}] ${method} ${url} - ${statusCode} (${duration}ms)`);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    if (statusCode >= 400) {
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –æ—Ç–≤–µ—Ç
        const responseData = JSON.parse(data);
        if (responseData.error) {
          console.log(`üö® Error response:`, responseData.error);
        }
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
      }
    }
    
    // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    originalSend.call(this, data);
  };
  
  // –ü–µ—Ä–µ–¥–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–º—É middleware
  next();
};

/**
 * ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö 404 –û–®–ò–ë–û–ö =====
 * Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –º–∞—Ä—à—Ä—É—Ç–∞–º
 * –°–æ–∑–¥–∞–µ—Ç –æ—à–∏–±–∫—É 404 –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
 */
const notFoundHandler = (req, res, next) => {
  // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
  const error = new Error(`Route ${req.originalUrl} not found`);
  error.status = 404;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º HTTP —Å—Ç–∞—Ç—É—Å 404 (Not Found)
  
  // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ø—ã—Ç–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É
  console.log(
    colors.yellow('‚ö†Ô∏è  404:'),                    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ 404
    colors.red(`${req.method} ${req.originalUrl}`), // –ú–µ—Ç–æ–¥ –∏ URL –∑–∞–ø—Ä–æ—Å–∞
    colors.gray(`from ${req.ip || 'unknown'}`)     // IP –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
  );
  
  // –ü–µ—Ä–µ–¥–∞–µ–º –æ—à–∏–±–∫—É –≤ —Å–ª–µ–¥—É—é—â–∏–π middleware (–≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫)
  next(error);
};

/**
 * ===== –ì–õ–û–ë–ê–õ–¨–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–®–ò–ë–û–ö =====
 * –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—à–∏–±–∫–∏, –ª–æ–≥–∏—Ä—É–µ—Ç –∏—Ö –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
 */
const globalErrorHandler = (error, req, res, next) => {
  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  const timestamp = new Date().toISOString();
  const method = req.method;
  const url = req.originalUrl;
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥ –∏–∑ –æ—à–∏–±–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 500 - Internal Server Error)
  const statusCode = error.status || error.statusCode || 500;
  
  // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  console.error(`üî• [${timestamp}] ERROR ${method} ${url}:`);
  console.error(`   Status: ${statusCode}`);
  console.error(`   Message: ${error.message}`);
  
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (process.env.NODE_ENV === 'development') {
    console.error(`   Stack: ${error.stack}`);
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let userMessage = 'Internal server error';  // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
  let errorType = 'server_error';             // –¢–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
  
  // –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥–∞
  switch (statusCode) {
    case 400:  // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å - –æ—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö
      userMessage = 'Bad request';
      errorType = 'validation_error';
      break;
    case 401:  // –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
      userMessage = 'Unauthorized';
      errorType = 'auth_error';
      break;
    case 403:  // –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤
      userMessage = 'Forbidden';
      errorType = 'permission_error';
      break;
    case 404:  // –ù–µ –Ω–∞–π–¥–µ–Ω–æ - —Ä–µ—Å—É—Ä—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      userMessage = 'Not found';
      errorType = 'not_found_error';
      break;
    case 429:  // –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ - –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
      userMessage = 'Too many requests';
      errorType = 'rate_limit_error';
      break;
    case 503:  // –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞
      userMessage = 'Service unavailable';
      errorType = 'service_error';
      break;
  }
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º JSON –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É
  const errorResponse = {
    error: errorType,                    // –¢–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    message: error.message || userMessage,   // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    timestamp: timestamp,                     // –í—Ä–µ–º—è –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏
    path: url,                               // URL –≥–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    method: method                           // HTTP –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
  };
  
  // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (process.env.NODE_ENV === 'development') {
    errorResponse.stack = error.stack;       // –ü–æ–ª–Ω—ã–π —Å—Ç–µ–∫ –æ—à–∏–±–∫–∏
    errorResponse.details = {
      originalError: error.name,             // –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –æ—à–∏–±–∫–∏
      statusCode: statusCode                 // –°—Ç–∞—Ç—É—Å –∫–æ–¥
    };
  }
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –æ—à–∏–±–æ–∫ Telegram Bot API
  if (error.response && error.response.error_code) {
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –æ—Ç Telegram
    errorResponse.telegramError = {
      code: error.response.error_code,       // –ö–æ–¥ –æ—à–∏–±–∫–∏ –æ—Ç Telegram
      description: error.response.description // –û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç Telegram
    };
    
    // –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—à–∏–±–∫–∏ Telegram –Ω–∞ –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫
    switch (error.response.error_code) {
      case 400:  // –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ Telegram API
        if (error.response.description.includes('chat not found')) {
          errorResponse.message = 'Channel or chat not found';
        } else if (error.response.description.includes('user not found')) {
          errorResponse.message = 'User not found';
        }
        break;
      case 403:  // –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –≤ Telegram API
        if (error.response.description.includes('bot was blocked')) {
          errorResponse.message = 'Bot was blocked by user';
        } else if (error.response.description.includes('not enough rights')) {
          errorResponse.message = 'Bot has insufficient permissions';
        }
        break;
    }
  }
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π –∫–ª–∏–µ–Ω—Ç—É
  res.status(statusCode).json(errorResponse);
};

/**
 * ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö –ê–°–ò–ù–•–†–û–ù–ù–´–• –û–®–ò–ë–û–ö =====
 * Wrapper —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ async middleware
 * –ò–∑–±–∞–≤–ª—è–µ—Ç –æ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–∏—Å–∞—Ç—å try-catch –≤ –∫–∞–∂–¥–æ–π async —Ñ—É–Ω–∫—Ü–∏–∏
 */
const asyncErrorHandler = (fn) => {
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é middleware
  return (req, res, next) => {
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ª–æ–≤–∏–º Promise –æ—à–∏–±–∫–∏
    Promise.resolve(fn(req, res, next)).catch(next);
  };
};

/**
 * ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö JSON –û–®–ò–ë–û–ö =====
 * –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞
 * –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç SyntaxError –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
 */
const jsonErrorHandler = (error, req, res, next) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–æ–π JSON (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)
  if (error instanceof SyntaxError && error.status === 400 && 'body' in error) {
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.error('üö® JSON Parse Error:', error.message);
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –æ—à–∏–±–∫–æ–π –ø–∞—Ä—Å–∏–Ω–≥–∞
    return res.status(400).json({
      success: false,                           // –§–ª–∞–≥ –Ω–µ—É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
      error: {
        type: 'json_parse_error',               // –¢–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        message: 'Invalid JSON format',         // –ü–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        timestamp: new Date().toISOString()     // –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞ –æ—à–∏–±–∫–∏
      }
    });
  }
  // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ JSON –ø–∞—Ä—Å–∏–Ω–≥–∞, –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  next(error);
};

/**
 * ===== –§–£–ù–ö–¶–ò–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø =====
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–±—ã—Ç–∏–π
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π
 */

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π —Å–∏—Å—Ç–µ–º—ã (–æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)
 */
const logEvent = (event, data = {}) => {
  const timestamp = new Date().toISOString();           // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
  console.log(colors.blue(`üéØ [${timestamp}] EVENT: ${event}`));      // –í—ã–≤–æ–¥–∏–º —Å–æ–±—ã—Ç–∏–µ —Å —ç–º–æ–¥–∑–∏ —Å–∏–Ω–∏–º —Ü–≤–µ—Ç–æ–º
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤—ã–≤–æ–¥–∏–º –∏—Ö —Å–µ—Ä—ã–º —Ü–≤–µ—Ç–æ–º
  if (Object.keys(data).length > 0) {
    console.log(colors.gray(`   Data:`), colors.gray(JSON.stringify(data, null, 2))); // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π (–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã)
 */
const logWarning = (message, data = {}) => {
  const timestamp = new Date().toISOString();           // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
  console.warn(colors.yellow(`‚ö†Ô∏è [${timestamp}] WARNING: ${message}`)); // –í—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∂–µ–ª—Ç—ã–º —Ü–≤–µ—Ç–æ–º
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤—ã–≤–æ–¥–∏–º –∏—Ö —Å–µ—Ä—ã–º —Ü–≤–µ—Ç–æ–º
  if (Object.keys(data).length > 0) {
    console.warn(colors.gray(`   Data:`), colors.gray(JSON.stringify(data, null, 2))); // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON
  }
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)
 */
const logSuccess = (message, data = {}) => {
  const timestamp = new Date().toISOString();           // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
  console.log(colors.green(`‚úÖ [${timestamp}] SUCCESS: ${message}`));   // –í—ã–≤–æ–¥–∏–º —É—Å–ø–µ—Ö —Å –≥–∞–ª–æ—á–∫–æ–π –∑–µ–ª–µ–Ω—ã–º —Ü–≤–µ—Ç–æ–º
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤—ã–≤–æ–¥–∏–º –∏—Ö —Å–µ—Ä—ã–º —Ü–≤–µ—Ç–æ–º
  if (Object.keys(data).length > 0) {
    console.log(colors.gray(`   Data:`), colors.gray(JSON.stringify(data, null, 2))); // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON
  }
};

/**
 * ===== –≠–ö–°–ü–û–†–¢ –ú–û–î–£–õ–Ø =====
 * –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ middleware –∏ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–ª–∏ –≤—Å–µ —Å—Ä–∞–∑—É
 */
module.exports = {
  requestLogger,      // Middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
  notFoundHandler,    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ 404 (–º–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω)
  globalErrorHandler, // –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  asyncErrorHandler,  // Wrapper –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ async –æ—à–∏–±–æ–∫
  jsonErrorHandler,   // –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
  logEvent,          // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
  logWarning,        // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
  logSuccess         // –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
};